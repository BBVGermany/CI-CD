name: Mirror All GitHub Repos to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:  # you run it manually, or add `schedule` for auto-sync

jobs:
  mirror:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Sync Repo
        uses: actions/checkout@v3

      - name: Install GitHub CLI & jq
        run: |
          sudo apt update
          sudo apt install azure-cli -y
          az extension add --name azure-devops

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GHP }}" | gh auth login --with-token
      
      - name: Authenticate Azure CLI
        env:
          AZURE_PAT: ${{ secrets.ADO }}
        run: |
          echo "${AZURE_PAT}" | az devops login
          az devops configure --defaults \
            organization=https://dev.azure.com/${{ secrets.ADO_ORG }} \
            project=${{ secrets.ADO_PRO }}

      - name: Get Repos and Mirror to Azure
        env:
          GITHUB_ORG: bbvgermany
          AZURE_ORG: ${{ secrets.ADO_ORG }}
          AZURE_PROJECT: ${{ secrets.ADO_PRO }}
          AZURE_PAT: ${{ secrets.ADO }}
          GITHUB_TOKEN: ${{ secrets.GHP }}
        run: |
          echo "üì• Fetching repositories from GitHub org $GITHUB_ORG..."
          az repos list \
          --organization "https://dev.azure.com/BBVGermany" \
          --project "$ADO_PRO" \
          --query "[].name" -o tsv > azure_repos.txt

          while read REPO; do
            echo "üîÑ Checking if $REPO exists in Azure DevOps..."

            # Check if repo exists in Azure
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -u ":${AZURE_PAT}" \
              "https://dev.azure.com/$AZURE_ORG/$AZURE_PROJECT/_apis/git/repositories?searchText=$REPO&api-version=7.1-preview.1")

            if [ "$RESPONSE" -eq 200 ]; then
              echo "‚úÖ Repository $REPO exists in Azure DevOps. Proceeding with mirroring..."

              # Clone the repo from GitHub
              git clone --mirror "https://$GITHUB_TOKEN@github.com/$GITHUB_ORG/$REPO.git"
              cd "$REPO.git"

              # Remove pull request branches
              git for-each-ref --format='%(refname)' refs/pull | xargs -r -n 1 git update-ref -d

              # Add Azure remote
              git remote add azure "https://user:$AZURE_PAT@dev.azure.com/$AZURE_ORG/$AZURE_PROJECT/_git/$REPO"
              git push --mirror azure

              cd ..
              rm -rf "$REPO.git"
            else
              echo "‚ùå Repository $REPO does not exist in Azure DevOps. Skipping..."
            fi
          done < repos.txt